package ua.divas.model;

import java.math.BigDecimal;

import java.sql.Timestamp;

import java.util.UUID;

import oracle.jbo.Key;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;

import oracle.jbo.server.TransactionEvent;

import ua.divas.classes.DivasEntityNoDelete;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Mon Feb 01 15:13:52 EET 2016
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class KreditOutTpPaymentImpl extends DivasEntityNoDelete {
    @Override
    protected void callId() {
        this.setId(UUID.randomUUID().toString());
    }
    
    @Override
    protected void doDML(int i, TransactionEvent transactionEvent) {
        super.doDML(i, transactionEvent);
        String _id = this.getKreditId();
        callStoredProcedure("KREDIT_ENTRY.kredit_move_plan_acc(?)", new Object[] { _id });
    }

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        Id,
        KreditId,
        Dat,
        Summa,
        PayId,
        KreditPayEnum,
        KreditOut;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }
    public static final int ID = AttributesEnum.Id.index();
    public static final int KREDITID = AttributesEnum.KreditId.index();
    public static final int DAT = AttributesEnum.Dat.index();
    public static final int SUMMA = AttributesEnum.Summa.index();
    public static final int PAYID = AttributesEnum.PayId.index();
    public static final int KREDITPAYENUM = AttributesEnum.KreditPayEnum.index();
    public static final int KREDITOUT = AttributesEnum.KreditOut.index();

    /**
     * This is the default constructor (do not remove).
     */
    public KreditOutTpPaymentImpl() {
    }

    /**
     * Gets the attribute value for Id, using the alias name Id.
     * @return the value of Id
     */
    public String getId() {
        return (String) getAttributeInternal(ID);
    }

    /**
     * Sets <code>value</code> as the attribute value for Id.
     * @param value value to set the Id
     */
    public void setId(String value) {
        setAttributeInternal(ID, value);
    }

    /**
     * Gets the attribute value for KreditId, using the alias name KreditId.
     * @return the value of KreditId
     */
    public String getKreditId() {
        return (String) getAttributeInternal(KREDITID);
    }

    /**
     * Sets <code>value</code> as the attribute value for KreditId.
     * @param value value to set the KreditId
     */
    public void setKreditId(String value) {
        setAttributeInternal(KREDITID, value);
    }

    /**
     * Gets the attribute value for Dat, using the alias name Dat.
     * @return the value of Dat
     */
    public Timestamp getDat() {
        return (Timestamp) getAttributeInternal(DAT);
    }

    /**
     * Sets <code>value</code> as the attribute value for Dat.
     * @param value value to set the Dat
     */
    public void setDat(Timestamp value) {
        setAttributeInternal(DAT, value);
    }

    /**
     * Gets the attribute value for Summa, using the alias name Summa.
     * @return the value of Summa
     */
    public BigDecimal getSumma() {
        return (BigDecimal) getAttributeInternal(SUMMA);
    }

    /**
     * Sets <code>value</code> as the attribute value for Summa.
     * @param value value to set the Summa
     */
    public void setSumma(BigDecimal value) {
        setAttributeInternal(SUMMA, value);
    }

    /**
     * Gets the attribute value for PayId, using the alias name PayId.
     * @return the value of PayId
     */
    public String getPayId() {
        return (String) getAttributeInternal(PAYID);
    }

    /**
     * Sets <code>value</code> as the attribute value for PayId.
     * @param value value to set the PayId
     */
    public void setPayId(String value) {
        setAttributeInternal(PAYID, value);
    }

    /**
     * @return the associated entity oracle.jbo.server.EntityImpl.
     */
    public EntityImpl getKreditPayEnum() {
        return (EntityImpl) getAttributeInternal(KREDITPAYENUM);
    }

    /**
     * Sets <code>value</code> as the associated entity oracle.jbo.server.EntityImpl.
     */
    public void setKreditPayEnum(EntityImpl value) {
        setAttributeInternal(KREDITPAYENUM, value);
    }

    /**
     * @return the associated entity KreditOutImpl.
     */
    public KreditOutImpl getKreditOut() {
        return (KreditOutImpl) getAttributeInternal(KREDITOUT);
    }

    /**
     * Sets <code>value</code> as the associated entity KreditOutImpl.
     */
    public void setKreditOut(KreditOutImpl value) {
        setAttributeInternal(KREDITOUT, value);
    }

    /**
     * @param id key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(String id) {
        return new Key(new Object[] { id });
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("ua.divas.model.KreditOutTpPayment");
    }
}

