package ua.divas.view;

import java.math.BigDecimal;

import java.sql.Timestamp;

import oracle.jbo.AttributeList;
import oracle.jbo.RowSet;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.ViewRowImpl;

import ua.divas.model.KreditOutTpPaymentImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Mon Feb 01 13:41:22 EET 2016
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class KreditOutTpPaymentViewRowImpl extends ViewRowImpl {


    public static final int ENTITY_KREDITOUTTPPAYMENT = 0;

    @Override
    public boolean isAttributeUpdateable(int i) {
        BigDecimal editable = this.getTEditable();
        if (editable.intValue()==0) {
            return false;
        } else { 
        return super.isAttributeUpdateable(i);
            }
    }

    @Override
    protected void create(AttributeList attributeList) {
        this.setTEditable(new BigDecimal(1));
        //this.setForValidation(new Integer(2));
        super.create(attributeList);
    }

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        Id,
        KreditId,
        Dat,
        Summa,
        PayId,
        TEditable,
        KreditPayEnumView1;
        static AttributesEnum[] vals = null;
        ;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int ID = AttributesEnum.Id.index();
    public static final int KREDITID = AttributesEnum.KreditId.index();
    public static final int DAT = AttributesEnum.Dat.index();
    public static final int SUMMA = AttributesEnum.Summa.index();
    public static final int PAYID = AttributesEnum.PayId.index();
    public static final int TEDITABLE = AttributesEnum.TEditable.index();
    public static final int KREDITPAYENUMVIEW1 = AttributesEnum.KreditPayEnumView1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public KreditOutTpPaymentViewRowImpl() {
    }

    /**
     * Gets KreditOutTpPayment entity object.
     * @return the KreditOutTpPayment
     */
    public KreditOutTpPaymentImpl getKreditOutTpPayment() {
        return (KreditOutTpPaymentImpl) getEntity(ENTITY_KREDITOUTTPPAYMENT);
    }

    /**
     * Gets the attribute value for ID using the alias name Id.
     * @return the ID
     */
    public String getId() {
        return (String) getAttributeInternal(ID);
    }

    /**
     * Sets <code>value</code> as attribute value for ID using the alias name Id.
     * @param value value to set the ID
     */
    public void setId(String value) {
        setAttributeInternal(ID, value);
    }

    /**
     * Gets the attribute value for KREDIT_ID using the alias name KreditId.
     * @return the KREDIT_ID
     */
    public String getKreditId() {
        return (String) getAttributeInternal(KREDITID);
    }

    /**
     * Sets <code>value</code> as attribute value for KREDIT_ID using the alias name KreditId.
     * @param value value to set the KREDIT_ID
     */
    public void setKreditId(String value) {
        setAttributeInternal(KREDITID, value);
    }

    /**
     * Gets the attribute value for DAT using the alias name Dat.
     * @return the DAT
     */
    public Timestamp getDat() {
        return (Timestamp) getAttributeInternal(DAT);
    }

    /**
     * Sets <code>value</code> as attribute value for DAT using the alias name Dat.
     * @param value value to set the DAT
     */
    public void setDat(Timestamp value) {
        setAttributeInternal(DAT, value);
    }

    /**
     * Gets the attribute value for SUMMA using the alias name Summa.
     * @return the SUMMA
     */
    public BigDecimal getSumma() {
        return (BigDecimal) getAttributeInternal(SUMMA);
    }

    /**
     * Sets <code>value</code> as attribute value for SUMMA using the alias name Summa.
     * @param value value to set the SUMMA
     */
    public void setSumma(BigDecimal value) {
        setAttributeInternal(SUMMA, value);
    }

    /**
     * Gets the attribute value for PAY_ID using the alias name PayId.
     * @return the PAY_ID
     */
    public String getPayId() {
        return (String) getAttributeInternal(PAYID);
    }

    /**
     * Sets <code>value</code> as attribute value for PAY_ID using the alias name PayId.
     * @param value value to set the PAY_ID
     */
    public void setPayId(String value) {
        setAttributeInternal(PAYID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TEditable.
     * @return the TEditable
     */
    public BigDecimal getTEditable() {
        return (BigDecimal) getAttributeInternal(TEDITABLE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TEditable.
     * @param value value to set the  TEditable
     */
    public void setTEditable(BigDecimal value) {
        setAttributeInternal(TEDITABLE, value);
    }

    /**
     * Gets the view accessor <code>RowSet</code> KreditPayEnumView1.
     */
    public RowSet getKreditPayEnumView1() {
        return (RowSet) getAttributeInternal(KREDITPAYENUMVIEW1);
    }
}

