package ua.divas.view;

import java.math.BigDecimal;

import oracle.jbo.AttributeList;
import oracle.jbo.server.ViewRowImpl;

import ua.divas.model.GuiSettingsImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Mon Nov 16 11:57:40 EET 2015
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class GuiSettingsViewRowImpl extends ViewRowImpl {


    public static final int ENTITY_GUISETTINGS = 0;

    @Override
    public boolean isAttributeUpdateable(int i) {
        BigDecimal editable = this.getEditable();
        if (editable.intValue()==0) {
            return false;
        } else { 
        return super.isAttributeUpdateable(i);
            }
    }

    @Override
    protected void create(AttributeList attributeList) {
        this.setEditable(new BigDecimal(1));
        //this.setForValidation(new Integer(2));
        super.create(attributeList);
    }

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        Id,
        OrderFetchSize,
        UserId,
        Editable,
        ZamerFetchSize,
        OtherzatrFetchSize;
        static AttributesEnum[] vals = null;
        ;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int ID = AttributesEnum.Id.index();
    public static final int ORDERFETCHSIZE = AttributesEnum.OrderFetchSize.index();
    public static final int USERID = AttributesEnum.UserId.index();
    public static final int EDITABLE = AttributesEnum.Editable.index();
    public static final int ZAMERFETCHSIZE = AttributesEnum.ZamerFetchSize.index();
    public static final int OTHERZATRFETCHSIZE = AttributesEnum.OtherzatrFetchSize.index();

    /**
     * This is the default constructor (do not remove).
     */
    public GuiSettingsViewRowImpl() {
    }

    /**
     * Gets GuiSettings entity object.
     * @return the GuiSettings
     */
    public GuiSettingsImpl getGuiSettings() {
        return (GuiSettingsImpl) getEntity(ENTITY_GUISETTINGS);
    }

    /**
     * Gets the attribute value for ID using the alias name Id.
     * @return the ID
     */
    public String getId() {
        return (String) getAttributeInternal(ID);
    }

    /**
     * Sets <code>value</code> as attribute value for ID using the alias name Id.
     * @param value value to set the ID
     */
    public void setId(String value) {
        setAttributeInternal(ID, value);
    }

    /**
     * Gets the attribute value for ORDER_FETCH_SIZE using the alias name OrderFetchSize.
     * @return the ORDER_FETCH_SIZE
     */
    public Integer getOrderFetchSize() {
        return (Integer) getAttributeInternal(ORDERFETCHSIZE);
    }

    /**
     * Sets <code>value</code> as attribute value for ORDER_FETCH_SIZE using the alias name OrderFetchSize.
     * @param value value to set the ORDER_FETCH_SIZE
     */
    public void setOrderFetchSize(Integer value) {
        setAttributeInternal(ORDERFETCHSIZE, value);
    }

    /**
     * Gets the attribute value for USER_ID using the alias name UserId.
     * @return the USER_ID
     */
    public String getUserId() {
        return (String) getAttributeInternal(USERID);
    }

    /**
     * Sets <code>value</code> as attribute value for USER_ID using the alias name UserId.
     * @param value value to set the USER_ID
     */
    public void setUserId(String value) {
        setAttributeInternal(USERID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Editable.
     * @return the Editable
     */
    public BigDecimal getEditable() {
        return (BigDecimal) getAttributeInternal(EDITABLE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Editable.
     * @param value value to set the  Editable
     */
    public void setEditable(BigDecimal value) {
        setAttributeInternal(EDITABLE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ZamerFetchSize.
     * @return the ZamerFetchSize
     */
    public Integer getZamerFetchSize() {
        return (Integer) getAttributeInternal(ZAMERFETCHSIZE);
    }

    /**
     * Sets <code>value</code> as attribute value for ZAMER_FETCH_SIZE using the alias name ZamerFetchSize.
     * @param value value to set the ZAMER_FETCH_SIZE
     */
    public void setZamerFetchSize(Integer value) {
        setAttributeInternal(ZAMERFETCHSIZE, value);
    }

    /**
     * Gets the attribute value for OTHERZATR_FETCH_SIZE using the alias name OtherzatrFetchSize.
     * @return the OTHERZATR_FETCH_SIZE
     */
    public Integer getOtherzatrFetchSize() {
        return (Integer) getAttributeInternal(OTHERZATRFETCHSIZE);
    }

    /**
     * Sets <code>value</code> as attribute value for OTHERZATR_FETCH_SIZE using the alias name OtherzatrFetchSize.
     * @param value value to set the OTHERZATR_FETCH_SIZE
     */
    public void setOtherzatrFetchSize(Integer value) {
        setAttributeInternal(OTHERZATRFETCHSIZE, value);
    }


}

